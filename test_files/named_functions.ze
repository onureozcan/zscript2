print(test()) // variable test should be hoisted to top
print(test_generic("test_generic"))

fun test():String {
    return "test" + test_other()
}

fun test(i:int):String {
    return "test - overload 1 " + test_other()
}

fun test(str:String):String {
    return "test - overload 2 " + test_other()
}

fun test(str:String, i: int):String {
    return "test - overload 3 " + test_other()
}

fun <T:Any> test_generic(arg:T):T {
    var ret: T = arg
    return ret;
}

fun <T:Any> test_generic(arg:T, str: String):T {
    print("test_generic overload 2")
    var ret: T = arg
    return ret;
}

fun <T:Any, K: int> test_generic(arg:T, i: K):T {
    print("test_generic overload 3")
    var ret: T = arg
    return ret;
}

fun test_other():String {
    return "test_other"
}